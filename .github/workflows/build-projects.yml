name: Build Projects

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-projects:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed to detect changes
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Find and build projects
      run: |
        # Find all directories with .build-config files
        find . -name ".build-config" -type f | while read config_file; do
          project_dir=$(dirname "$config_file")
          echo "Found project: $project_dir"
          
          # Read the build configuration
          source "$config_file"
          
          if [ -f "$project_dir/$BUILD_SCRIPT" ]; then
            echo "Running build script: $project_dir/$BUILD_SCRIPT"
            cd "$project_dir"
            chmod +x "$BUILD_SCRIPT"
            ./"$BUILD_SCRIPT"
            cd ../..
          else
            echo "Warning: Build script $BUILD_SCRIPT not found in $project_dir"
          fi
        done
        
    - name: Commit built files
      run: |
        # Configure git
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Find all directories with .build-config files and add their built files
        find . -name ".build-config" -type f | while read config_file; do
          project_dir=$(dirname "$config_file")
          
          # Add common build output directories (including dev/ subdirectories)
          if [ -d "$project_dir/dev/dist" ]; then
            git add "$project_dir/dev/dist/"
          fi
          if [ -d "$project_dir/dev/build" ]; then
            git add "$project_dir/dev/build/"
          fi
          if [ -d "$project_dir/dev/out" ]; then
            git add "$project_dir/dev/out/"
          fi
          if [ -d "$project_dir/dev/.next" ]; then
            git add "$project_dir/dev/.next/"
          fi
          
          # Also check for build outputs in the project root (for non-dev projects)
          if [ -d "$project_dir/dist" ]; then
            git add "$project_dir/dist/"
          fi
          if [ -d "$project_dir/build" ]; then
            git add "$project_dir/build/"
          fi
          if [ -d "$project_dir/out" ]; then
            git add "$project_dir/out/"
          fi
          if [ -d "$project_dir/.next" ]; then
            git add "$project_dir/.next/"
          fi
          
          # Add updated index.html if it exists
          if [ -f "$project_dir/index.html" ]; then
            git add "$project_dir/index.html"
          fi
        done
        
        # Commit if there are changes
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Build projects [skip ci]"
          git push
        fi 