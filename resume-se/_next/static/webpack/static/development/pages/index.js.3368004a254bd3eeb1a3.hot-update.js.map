{"version":3,"file":"static/webpack/static/development/pages/index.js.3368004a254bd3eeb1a3.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import css from \"styled-jsx/css\";\nimport Head from \"next/head\";\nimport _ from \"lodash\";\nimport dynamic from \"next/dynamic\";\n\nconst Nbsp = () => \"\\u00A0\";\nconst config = require(\"../config.js\").default;\n\nconst gray = (n) => {\n  let chan = 32 * n;\n  return `rgb(${chan}, ${chan}, ${chan})`;\n};\n\nconst Info = () => {\n  const info = config.info;\n  return (\n    <section id=\"info\">\n      <div className=\"wrapping wrappingCenter row\">\n        <div className=\"datum\" id=\"name\">\n          <h3>luming hao</h3>\n        </div>\n        {config.show.headline && (\n          <div className=\"datum\" id=\"headline\">\n            <p>{info.headline}</p>\n          </div>\n        )}\n        {config.show.location && (\n          <div className=\"datum\" id=\"location\">\n            <p>{info.location}</p>\n          </div>\n        )}\n\n        <div className=\"datum leftBorder\" id=\"contact\">\n          <p>\n            <a href={`tel:${info.phone.replace(\"-\", \"\")}`}>{`${info.phone}`}</a>\n          </p>\n          <p>\n            <a href={`mailto:${info.email}`}>{info.email}</a>\n          </p>\n          <p>\n            <a target=\"_blank\" href={`https://${info.website}`}>\n              {info.website}\n            </a>\n          </p>\n        </div>\n      </div>\n      <style jsx>\n        {`\n          .row {\n            margin-bottom: 10px;\n          }\n          #info {\n            margin-top: 8px;\n          }\n\n          #name {\n            font-size: 24px;\n            padding-bottom: 8px;\n          }\n\n          #headline {\n            color: ${gray(1)};\n            font-weight: bold;\n          }\n\n          #location {\n            color: ${gray(2)};\n          }\n        `}\n      </style>\n    </section>\n  );\n};\nconst spanWords = (words, classNameAdd) =>\n  words.map((word) =>\n    word.startsWith(\"http\") ? (\n      <a target=\"_blank\" href={word}>\n        <span className={`word ${classNameAdd}`}>\n          {word}\n          <Nbsp />\n        </span>\n      </a>\n    ) : (\n      <span className={`word ${classNameAdd}`}>\n        {word}\n        <Nbsp />\n      </span>\n    )\n  );\n\nconst Card = (card) => {\n  const word = (field) =>\n    card[field] && <>{spanWords(card[field].split(\" \"), field)}</>;\n\n  const list = (title, items) =>\n    (items || []).length > 0 && (\n      <>\n        <span className=\"word listMeta\">\n          <b>\n            {`${title}:`}\n            <Nbsp />\n          </b>\n        </span>\n        {spanWords((items || []).join(\", \").split(\" \"), \"listItem\")}\n      </>\n    );\n  return (\n    <div className=\"card leftBorder\">\n      <p className=\"wrapping wrappingCenter\">\n        {word(\"title\")}\n        {word(\"institution\")}\n        {word(\"year\")}\n        {word(\"description\")}\n        {config.show.topics && list(\"topics\", card.topics)}\n        {config.show.cmdf && list(\"cmd+f\", card.cmdf)}\n      </p>\n      <style jsx global>\n        {`\n          .card {\n            width: 600px;\n            max-width: 90vw;\n          }\n          .card .title {\n            font-size: 18px;\n            font-weight: bold;\n          }\n\n          .card .institution {\n            font-weight: bold;\n            color: ${gray(4)};\n          }\n\n          a .description {\n            // color: ${gray(5)};\n            // text-decoration-color: ${gray(6)};\n          }\n\n          .card .year {\n            color: ${gray(5)};\n            font-weight: normal;\n            font-size: 14px;\n          }\n\n          .listMeta {\n            color: ${gray(4)};\n          }\n          .listItem {\n            color: ${gray(5)};\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n\nconst Section = ({ title, copy, cards }) => (\n  <section id={`section-${title}`}>\n    <h2>{`${title}: `}</h2>\n    {copy && (\n      <div className=\"copy\">\n        <p>{spanWords(copy.split(\" \"), \"sectionCopy\")}</p>\n      </div>\n    )}\n    <div className=\"wrapping wrappingBaseline\">\n      {_(cards)\n      .sortBy(c => c.year)\n      .map((card) => (\n        <div className=\"datum\">\n          <Card {...card} />\n        </div>\n      ))\n      .value()\n      }\n    </div>\n    <style jsx>\n      {`\n        .copy {\n          font-size: 12px;\n          color: ${gray(3)};\n        }\n      `}\n    </style>\n  </section>\n);\n\nconst Other = () => {\n  return (\n    <section id={`section-other`}>\n      <span id=\"otherTitle\">{`${config.other.title}: `}</span>\n      {_(config.other.items)\n        .flatMap(([item, href]) => [\n          <span className=\"\">{`, `}</span>,\n          <a href={href}>\n            <span className=\"\">{item}</span>\n          </a>,\n        ])\n        .tail()\n        .value()}\n      <style jsx>{`\n        #otherTitle {\n          font-size: 20px;\n          font-weight: bold;\n        }\n      `}</style>\n    </section>\n  );\n};\n\nconst DynTitle = dynamic(() => (\n  <title>{`luming hao - ${_.last(window.location.split(\"/\"))}`}</title>\n), {ssr: false});\n\nexport default () => (\n  <main>\n    <Head><title>resume - luming hao</title></Head>\n    <Info />\n    {config.sections.map(Section)}\n    <Other />\n    <section id=\"intent\">{config.intent}</section>\n\n    <style jsx global>\n      {`\n        #intent {\n          visibility: hidden;\n        }\n        .leftBorder {\n          padding-left: 10px;\n          padding-right: 10px;\n          border-left: 2px solid ${gray(4)};\n          margin-top: 2px;\n          margin-bottom: 2px;\n        }\n        body {\n          font-family: \"Helvetica\", \"Arial\", sans-serif;\n        }\n        .marginRightCh {\n          // margin-right: 5px;\n          // margin-right: 0.55ch;\n        }\n        main {\n          padding: 10px 0px 300px 0px;\n        }\n        section {\n          padding: 0px 0px 0px 12px;\n          margin: 6px 0px 6px 0px;\n        }\n\n        * {\n          margin: 0;\n        }\n\n        a,\n        a:visited {\n          color: rgb(64, 64, 64);\n        }\n\n        .wrapping {\n          display: flex;\n          flex-direction: row;\n          flex-wrap: wrap;\n        }\n\n        .wrappingBaseline {\n          align-items: baseline;\n        }\n\n        .wrappingCenter {\n          align-items: center;\n        }\n\n        .wrapping > .datum {\n          margin-right: 8px;\n        }\n      `}\n    </style>\n  </main>\n);\n"],"mappings":"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","sourceRoot":""}