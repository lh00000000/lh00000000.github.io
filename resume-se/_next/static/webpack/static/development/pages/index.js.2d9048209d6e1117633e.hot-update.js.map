{"version":3,"file":"static/webpack/static/development/pages/index.js.2d9048209d6e1117633e.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import css from \"styled-jsx/css\";\nimport Head from \"next/head\";\nimport _ from \"lodash\";\nimport dynamic from \"next/dynamic\";\nimport moment from \"moment\";\nconst Nbsp = () => \"\\u00A0\";\nconst config = require(\"../config.js\").default;\n\nconst agg = () => {\n  let cmdf = _(config.sections)\n    .flatMap(\"cards\")\n    .filter(\"cmdf\")\n    .flatMap(\"cmdf\")\n    .uniq()\n    .value();\n  return {\n    cmdf,\n  };\n};\n\nconst gray = (n) => {\n  let chan = 32 * n;\n  return `rgb(${chan}, ${chan}, ${chan})`;\n};\n\nconst Info = () => {\n  const info = config.info;\n  return (\n    <section id=\"info\">\n      <div className=\"wrapping wrappingCenter row\">\n        <div className=\"datum\" id=\"name\">\n          <p>{\"luming hao\" + Nbsp()}</p>\n        </div>\n        {config.show.headline && (\n          <div className=\"datum\" id=\"headline\">\n            <p>{info.headline + Nbsp()}</p>\n          </div>\n        )}\n        {config.show.location && (\n          <div className=\"datum\" id=\"location\">\n            <p>{info.location + Nbsp()}</p>\n          </div>\n        )}\n\n        <div className=\"datum leftBorder\" id=\"contact\">\n          <p>\n            <a href={`tel:${info.phone.replace(\"-\", \"\")}`}>{`${info.phone}`}</a>\n          </p>\n          <p>\n            <a href={`mailto:${info.email}`}>{info.email}</a>\n          </p>\n          <p>\n            <a target=\"_blank\" href={`https://${info.website}`}>\n              {info.website}\n            </a>\n          </p>\n        </div>\n      </div>\n      {config.show.summary && (\n        <div className=\"summary\">\n          <h2>summary: </h2>\n          <ul>\n            {config.info.summary(agg()).map((s) => (\n              <li>{s}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n      <style jsx>\n        {`\n          .row {\n            margin-bottom: 10px;\n          }\n          #info {\n            margin-top: 8px;\n          }\n\n          #name {\n            font-size: 24px;\n            padding-bottom: 8px;\n            font-weight: bold;\n          }\n\n          #headline {\n            color: ${gray(1)};\n            font-weight: bold;\n          }\n\n          #location {\n            color: ${gray(2)};\n          }\n\n          .summary ul {\n            padding: 0px 0px 0px 6px;\n          }\n        `}\n      </style>\n    </section>\n  );\n};\nconst words = (words, classNameAdd) =>\n  words\n    .reduce((l, word) => {\n      if (word.startsWith(\"http\")) {\n        return l.concat([\n          {\n            type: \"a\",\n            textContent: word,\n          },\n        ]);\n      } else {\n        if (l.length > 0 && _.last(l).type == \"span\") {\n          l[l.length - 1].textContent =\n            l[l.length - 1].textContent + word + \" \";\n          return l;\n        } else {\n          return l.concat([\n            {\n              type: \"span\",\n              textContent: word + \" \",\n            },\n          ]);\n        }\n      }\n    }, [])\n    .map(({ type, textContent }) => {\n      switch (type) {\n        case \"a\":\n          return (\n            <>\n              <a\n                className={\"word \" + classNameAdd}\n                target=\"_blank\"\n                href={textContent.trim()}\n              >\n                {textContent.trim()}\n              </a>\n              <span>{Nbsp()}</span>\n            </>\n          );\n          break;\n        default:\n          return (\n            <span className={\"word \" + classNameAdd}>\n              {textContent.trim() + Nbsp()}\n            </span>\n          );\n          break;\n      }\n    });\n\nconst Card = (card) => {\n  const fieldContents = (field) =>\n    card[field] && <>{words(card[field].split(\" \"), field)}</>;\n\n  const list = (title, items) =>\n    (items || []).length > 0 && (\n      <>\n        <span className=\"word listMeta\">\n          <b>{`${title}:${Nbsp()}`}</b>\n        </span>\n        {words((items || []).join(\", \").split(\" \"), \"listItem\")}\n      </>\n    );\n  return (\n    <div className=\"card leftBorder\">\n      <p>\n        <h3>{fieldContents(\"title\")}</h3>\n        {fieldContents(\"institution\")}\n        {fieldContents(\"year\")}\n\n        {fieldContents(\"description\")}\n        {config.show.topics && list(\"topics\", card.topics)}\n        {config.show.cmdf && list(\"cmd+f\", card.cmdf)}\n      </p>\n      <style jsx global>\n        {`\n          .card {\n            width: 600px;\n            max-width: 90vw;\n          }\n          .card .title {\n            font-size: 18px;\n            font-weight: bold;\n          }\n\n          .card .institution {\n            font-weight: bold;\n            color: ${gray(4)};\n          }\n          h3 {\n            display: inline;\n          }\n\n          .word {\n            display: inline;\n          }\n\n          .card .year {\n            color: ${gray(5)};\n            font-weight: normal;\n            font-size: 14px;\n          }\n\n          .listMeta {\n            color: ${gray(4)};\n          }\n          .listItem {\n            color: ${gray(5)};\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n\nconst Section = ({ title, copy, cards }) => (\n  <section id={`section-${title}`}>\n    <h2>{`${title}: `}</h2>\n    {copy && (\n      <div className=\"copy\">\n        <p>{words(copy.split(\" \"), \"sectionCopy\")}</p>\n      </div>\n    )}\n    <div className=\"wrapping wrappingBaseline\">\n      {_(cards)\n        .sortBy((c) => c.year)\n        .reverse()\n        .map((card) => (\n          <div className=\"datum\">\n            <Card {...card} />\n          </div>\n        ))\n        .value()}\n    </div>\n    <style jsx>\n      {`\n        .copy {\n          font-size: 14px;\n          color: ${gray(3)};\n          margin-bottom: 4px;\n        }\n      `}\n    </style>\n  </section>\n);\n\nconst Other = () => {\n  return (\n    <section id={`section-other`}>\n      <span id=\"otherTitle\">{`${config.other.title}: `}</span>\n      {_(config.other.items)\n        .flatMap(([item, href]) => [\n          <span className=\"\">{`, `}</span>,\n          <a href={href}>\n            <span className=\"\">{item}</span>\n          </a>,\n        ])\n        .tail()\n        .value()}\n      <style jsx>{`\n        #otherTitle {\n          font-size: 20px;\n          font-weight: bold;\n        }\n      `}</style>\n    </section>\n  );\n};\n\nexport default () => (\n  <main>\n    <Head>\n      <title>resume - luming hao</title>\n    </Head>\n\n    <Info />\n    {config.sections.map(Section)}\n    <Other />\n\n    <style jsx global>\n      {`\n        .leftBorder {\n          padding-left: 10px;\n          padding-right: 10px;\n          border-left: 2px solid ${gray(4)};\n          margin-top: 2px;\n          margin-bottom: 2px;\n        }\n        body {\n          font-family: \"Helvetica\", \"Arial\", sans-serif;\n        }\n\n        main {\n          padding: 10px 0px 300px 0px;\n        }\n        section {\n          padding: 0px 0px 0px 12px;\n          margin: 6px 0px 6px 0px;\n        }\n\n        * {\n          margin: 0;\n        }\n\n        a,\n        a:visited {\n          color: rgb(64, 64, 64);\n        }\n\n        .wrapping {\n          display: flex;\n          flex-direction: row;\n          flex-wrap: wrap;\n        }\n\n        .wrappingBaseline {\n          align-items: baseline;\n        }\n\n        .wrappingCenter {\n          align-items: center;\n        }\n      `}\n    </style>\n  </main>\n);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAlCA;AAAA;AAAA;AAuEA;AACA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AArBA;AAuBA;AAjDA;AACA;AAkDA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAimBA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AADA;;;;A","sourceRoot":""}